<frameworkBase:ViewsBase x:Class="YuanTu.BJJingDuETYY.Component.Auth.Views.SiCardView"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:frameworkBase="clr-namespace:YuanTu.Core.FrameworkBase;assembly=YuanTu.Core"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         xmlns:mvvm="http://prismlibrary.com/"
                         xmlns:userControls="clr-namespace:YuanTu.Consts.UserControls;assembly=YuanTu.Consts"
                         d:DesignHeight="750"
                         d:DesignWidth="900"
                         mvvm:ViewModelLocator.AutoWireViewModel="True"
                         mc:Ignorable="d">
    <frameworkBase:ViewsBase.Resources>
        <!--  功能按钮  -->
        <SolidColorBrush x:Key="按钮文本颜色">#ffffff</SolidColorBrush>
        <Style x:Key="按钮文本" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Foreground" Value="{StaticResource 按钮文本颜色}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Color x:Key="确定按钮颜色1">#76b4e9</Color>
        <Color x:Key="确定按钮颜色2">#67a7de</Color>
        <LinearGradientBrush x:Key="确定按钮颜色" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="{StaticResource 确定按钮颜色1}" />
            <GradientStop Offset="1" Color="{StaticResource 确定按钮颜色2}" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="确定按钮失效颜色">#a8a8a8</SolidColorBrush>
        <Style x:Key="确定按钮边框" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource 确定按钮颜色}" />
            <Setter Property="CornerRadius" Value="20" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色1}"
                                            To="{StaticResource 确定按钮颜色2}" />
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色2}"
                                            To="{StaticResource 确定按钮颜色1}" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色2}"
                                            To="{StaticResource 确定按钮颜色1}" />
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色1}"
                                            To="{StaticResource 确定按钮颜色2}" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource 确定按钮失效颜色}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="确定按钮" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="228" />
            <Setter Property="Height" Value="44" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Style="{StaticResource 确定按钮边框}">
                            <TextBlock Margin="8"
                                       Style="{StaticResource 按钮文本}"
                                       Text="{Binding Content,
                                                      RelativeSource={RelativeSource AncestorType={x:Type Button},
                                                                                     Mode=FindAncestor}}" />
                            <!--  {TemplateBinding ContentControl.Content}  -->
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </frameworkBase:ViewsBase.Resources>
    <Grid>
        <ContentControl Width="684"
                        Height="542"
                        Margin="0"
                        Style="{DynamicResource 提示卡片}">
            <StackPanel Margin="0" Orientation="Vertical">
                <Viewbox Width="684"
                         Height="365"
                         Margin="0">
                    <Canvas Width="300" Height="300">
                        <!--  The Viewport3D provides a rendering surface for 3-D visual content.  -->
                        <Viewport3D Canvas.Left="0"
                                    Canvas.Top="10"
                                    Width="300"
                                    Height="300"
                                    ClipToBounds="True">

                            <!--  Defines the camera used to view the 3D object.  -->
                            <Viewport3D.Camera>
                                <PerspectiveCamera FieldOfView="60"
                                                   LookDirection="0,-0.7,-1"
                                                   Position="0,1,1.5" />
                            </Viewport3D.Camera>

                            <!--  The ModelVisual3D children contain the 3D models  -->
                            <Viewport3D.Children>

                                <!--
                                    Two ModelVisual3D define the lights cast in the scene. Without light, the
                                    3D object cannot be seen. Also, the direction of the lights affect shadowing.
                                -->
                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <DirectionalLight Direction="-0.612372,-0.5,-0.612372" Color="#FFFFFF" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <DirectionalLight Direction="0.612372,-0.5,-0.612372" Color="#FFFFFF" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                                <ModelVisual3D x:Name="入口">
                                    <ModelVisual3D.Content>
                                        <GeometryModel3D>

                                            <!--  The geometry specifes the shape of the 3D plane. In this case, a flat sheet is created.  -->
                                            <GeometryModel3D.Geometry>
                                                <MeshGeometry3D Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 "
                                                                Positions="-0.5,-0.5,0 0.5,-0.5,0 0.5,0.5,0 0.5,0.5,0 -0.5,0.5,0 -0.5,-0.5,0 "
                                                                TextureCoordinates="0,1 1,1 1,0 1,0 0,0 0,1 "
                                                                TriangleIndices="0,1,2 3,4,5 " />
                                            </GeometryModel3D.Geometry>

                                            <!--  The material specifies the material applied to the plane. In this case it is a linear gradient.  -->
                                            <GeometryModel3D.Material>
                                                <MaterialGroup>
                                                    <DiffuseMaterial>
                                                        <DiffuseMaterial.Brush>
                                                            <ImageBrush ImageSource="{Binding BackUri}" />
                                                        </DiffuseMaterial.Brush>
                                                    </DiffuseMaterial>
                                                </MaterialGroup>
                                            </GeometryModel3D.Material>

                                            <!--
                                                The Transform specifies how to transform the 3D object. The properties of the
                                                Rotation object are animated causing the 3D object to rotate and "wobble" (see Storyboard below).
                                            -->
                                            <GeometryModel3D.Transform>
                                                <Transform3DGroup>
                                                    <ScaleTransform3D ScaleX="3.2" ScaleY="1.8" />
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D Angle="-30" Axis="1,0,0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                    <TranslateTransform3D OffsetZ="-1" />
                                                </Transform3DGroup>
                                            </GeometryModel3D.Transform>
                                        </GeometryModel3D>
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                                <ModelVisual3D x:Name="卡片">
                                    <ModelVisual3D.Content>
                                        <GeometryModel3D>

                                            <!--  The geometry specifes the shape of the 3D plane. In this case, a flat sheet is created.  -->
                                            <GeometryModel3D.Geometry>
                                                <MeshGeometry3D Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 "
                                                                Positions="-0.5,-0.5,0 0.5,-0.5,0 0.5,0.5,0 0.5,0.5,0 -0.5,0.5,0 -0.5,-0.5,0 "
                                                                TextureCoordinates="0,1 1,1 1,0 1,0 0,0 0,1 "
                                                                TriangleIndices="0,1,2 3,4,5 " />
                                            </GeometryModel3D.Geometry>

                                            <!--  The material specifies the material applied to the plane. In this case it is a linear gradient.  -->
                                            <GeometryModel3D.Material>
                                                <MaterialGroup>
                                                    <DiffuseMaterial>
                                                        <DiffuseMaterial.Brush>
                                                            <ImageBrush ImageSource="{Binding CardUri}" />
                                                        </DiffuseMaterial.Brush>
                                                    </DiffuseMaterial>
                                                </MaterialGroup>
                                            </GeometryModel3D.Material>

                                            <!--
                                                The Transform specifies how to transform the 3D object. The properties of the
                                                Rotation object are animated causing the 3D object to rotate and "wobble" (see Storyboard below).
                                            -->
                                            <GeometryModel3D.Transform>
                                                <Transform3DGroup>
                                                    <ScaleTransform3D ScaleX="1.5" ScaleY="1" />
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D Angle="-90" Axis="0,0,1" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D Angle="-90" Axis="1,0,0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                    <TranslateTransform3D x:Name="myTranslateTransform" />
                                                </Transform3DGroup>
                                            </GeometryModel3D.Transform>
                                        </GeometryModel3D>
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                            </Viewport3D.Children>

                            <!--  Trigger the rotation animation when the 3D object loads.  -->
                            <Viewport3D.Triggers>
                                <EventTrigger RoutedEvent="Viewport3D.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard Duration="0:0:2" RepeatBehavior="Forever">
                                            <DoubleAnimation DecelerationRatio="1"
                                                             Duration="0:0:0.5"
                                                             From="-1"
                                                             Storyboard.TargetName="myTranslateTransform"
                                                             Storyboard.TargetProperty="OffsetY"
                                                             To="0" />
                                            <DoubleAnimation AccelerationRatio="1"
                                                             BeginTime="0:0:0.5"
                                                             Duration="0:0:1"
                                                             From="0"
                                                             Storyboard.TargetName="myTranslateTransform"
                                                             Storyboard.TargetProperty="OffsetZ"
                                                             To="-1.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Viewport3D.Triggers>
                        </Viewport3D>
                    </Canvas>
                </Viewbox>
                <Label Margin="10"
                       HorizontalAlignment="Center"
                       Content="{Binding ContentMsg}"
                       FontSize="20"
                       Foreground="#888888" />
                <userControls:SimpleButton Margin="10"
                                           HorizontalAlignment="Center"
                                           Command="{Binding ConfirmCommand}"
                                           Content="确定"
                                           Visibility="{Binding IsShowConfirm, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                           Style="{StaticResource 确定按钮}"
                                           TagString="确定" />
            </StackPanel>
        </ContentControl>
    </Grid>
</frameworkBase:ViewsBase>

