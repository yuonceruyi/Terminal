<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--  功能按钮  -->

    <Style x:Key="主按钮文本" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{StaticResource 主按钮文本Brush}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="22" />
    </Style>
    <Style x:Key="主按钮边框" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource 主按钮背景Brush}" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource 主按钮边框Brush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"
                                            To="{StaticResource 主按钮背景DownColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"
                                            To="{StaticResource 主按钮背景Color}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#B9B4B4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="主按钮边框2" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource 主按钮背景Brush}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Duration="0:0:0.2">
                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource 主按钮背景DownColor}" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.8" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.8" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Duration="0:0:0.2">
                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource 主按钮背景Color}" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#B9B4B4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="主按钮" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border IsEnabled="{TemplateBinding Control.IsEnabled}" Style="{StaticResource 主按钮边框2}">
                        <Border Style="{StaticResource 主按钮边框}">
                            <ContentPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="主按钮2文本" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{StaticResource 主按钮2文本Brush}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="22" />
    </Style>
    <Style x:Key="主按钮2边框" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource 主按钮2背景Brush}" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource 主按钮2边框Brush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"
                                            To="{StaticResource 主按钮2背景DownColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"
                                            To="{StaticResource 主按钮2背景Color}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#B9B4B4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="主按钮2边框2" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource 主按钮2背景Brush}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Duration="0:0:0.2">
                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource 主按钮2背景DownColor}" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.8" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.8" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Duration="0:0:0.2">
                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource 主按钮2背景Color}" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#B9B4B4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="主按钮2" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border IsEnabled="{TemplateBinding Control.IsEnabled}" Style="{StaticResource 主按钮2边框2}">
                        <Border Style="{StaticResource 主按钮2边框}">
                            <ContentPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="确定按钮" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border IsEnabled="{TemplateBinding Control.IsEnabled}" Style="{StaticResource 主按钮边框2}">
                        <Border Style="{StaticResource 主按钮边框}">
                            <TextBlock Margin="8" Style="{StaticResource 主按钮文本}"
                                       Text="{TemplateBinding Content}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="取消按钮" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border IsEnabled="{TemplateBinding Control.IsEnabled}" Style="{StaticResource 主按钮2边框2}">
                        <Border Style="{StaticResource 主按钮2边框}">
                            <TextBlock Style="{StaticResource 主按钮2文本}"
                                       Text="{TemplateBinding Content}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="修改按钮" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="38" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border IsEnabled="{TemplateBinding Control.IsEnabled}" Style="{StaticResource 主按钮边框2}">
                        <Border Style="{StaticResource 主按钮边框}">
                            <TextBlock Style="{StaticResource 主按钮文本}" Margin="3"
                                       Text="{TemplateBinding Content}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="翻页按钮文本" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{StaticResource 主按钮文本Brush}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="22" />
    </Style>

    <Style x:Key="上一页按钮" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="105" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path x:Name="Path" Data="M98,0 L17,0 L15,1 L1,16 L0,20 L1,24 L15,39 L17,40 L98,40 L100,38 L100,2 z"
                              HorizontalAlignment="Center" VerticalAlignment="Center"
                              Fill="{StaticResource 主按钮背景Brush}" Stroke="{StaticResource 主按钮边框Brush}" StrokeThickness="2">
                        </Path>
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Style="{StaticResource 翻页按钮文本}"
                                   Margin="10 0 0 0"
                                   Text="上一页" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="#beb8a7" />
                            <Setter TargetName="Path" Property="Stroke" Value="#b2ab99" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="Path" >
                                        <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                            Duration="0:0:0.2" To="{StaticResource 主按钮背景DownColor}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard  TargetName="Path">
                                        <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                            Duration="0:0:0.2" To="{StaticResource 主按钮背景Color}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="下一页按钮" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="105" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path x:Name="Path" Data="M98,0 L17,0 L15,1 L1,16 L0,20 L1,24 L15,39 L17,40 L98,40 L100,38 L100,2 z"
                              HorizontalAlignment="Center" VerticalAlignment="Center"
                              Fill="{StaticResource 主按钮背景Brush}" Stroke="{StaticResource 主按钮边框Brush}" StrokeThickness="2">
                            <Path.LayoutTransform>
                                <RotateTransform Angle="180" />
                            </Path.LayoutTransform>
                        </Path>
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Style="{StaticResource 翻页按钮文本}"
                                   Margin="0 0 10 0"
                                   Text="下一页" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="#beb8a7" />
                            <Setter TargetName="Path" Property="Stroke" Value="#b2ab99" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="Path" >
                                        <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                            Duration="0:0:0.2" To="{StaticResource 主按钮背景DownColor}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard  TargetName="Path">
                                        <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                            Duration="0:0:0.2" To="{StaticResource 主按钮背景Color}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>