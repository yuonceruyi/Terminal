<frameworkBase:ViewsBase x:Class="YuanTu.QDKouQiangYY.Component.Auth.Views.PatientInfoExView"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:Converters="clr-namespace:YuanTu.Core.Converters;assembly=YuanTu.Core"
                         xmlns:UserControls="clr-namespace:YuanTu.Consts.UserControls;assembly=YuanTu.Consts"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:frameworkBase="clr-namespace:YuanTu.Core.FrameworkBase;assembly=YuanTu.Core"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         xmlns:mvvm="http://prismlibrary.com/"
                         d:DesignHeight="750"
                         d:DesignWidth="900"
                         mvvm:ViewModelLocator.AutoWireViewModel="True"
                         mc:Ignorable="d">
    <frameworkBase:ViewsBase.Resources>
        <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="提示卡片Base" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="23" />
        </Style>
        <Style x:Key="提示卡片Header"
               BasedOn="{StaticResource 提示卡片Base}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#a7a7a7" />
            <Setter Property="TextAlignment" Value="Right" />
        </Style>
        <SolidColorBrush x:Key="BoyBrush" Color="#7DBBF1" />
        <SolidColorBrush x:Key="PlainBrush" Color="#FFFFFF" />
        <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="微软雅黑" />
            <Setter Property="FontSize" Value="23" />
        </Style>
        <Style x:Key="RadioButtonBoy" TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                        Width="116"
                                        Height="56"
                                        BorderBrush="{StaticResource BoyBrush}"
                                        BorderThickness="1"
                                        CornerRadius="5">
                                    <StackPanel HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBlock x:Name="TextBlockSymbol"
                                                   Margin="0,-5,5,0"
                                                   FontFamily="Malgun Gothic"
                                                   FontSize="30"
                                                   FontWeight="Bold"
                                                   Foreground="{StaticResource PlainBrush}"
                                                   Style="{StaticResource TextStyle}"
                                                   Text="♂" />
                                        <TextBlock x:Name="TextBlock"
                                                   Foreground="{StaticResource PlainBrush}"
                                                   Style="{StaticResource TextStyle}"
                                                   Text="男" />
                                    </StackPanel>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Control.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BoyBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlockSymbol" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PlainBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PlainBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Control.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PlainBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlockSymbol" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BoyBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BoyBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="GirlBrush" Color="#FFA6ED" />
        <Style x:Key="RadioButtonGirl" TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                        Width="116"
                                        Height="56"
                                        BorderBrush="{StaticResource GirlBrush}"
                                        BorderThickness="1"
                                        CornerRadius="5">
                                    <StackPanel HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBlock x:Name="TextBlockSymbol"
                                                   Margin="0,-5,5,0"
                                                   FontFamily="Malgun Gothic"
                                                   FontSize="30"
                                                   FontWeight="Bold"
                                                   Foreground="{StaticResource PlainBrush}"
                                                   Style="{StaticResource TextStyle}"
                                                   Text="♀" />
                                        <TextBlock x:Name="TextBlock"
                                                   Foreground="{StaticResource PlainBrush}"
                                                   Style="{StaticResource TextStyle}"
                                                   Text="女" />
                                    </StackPanel>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Control.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GirlBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlockSymbol" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PlainBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PlainBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Control.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PlainBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlockSymbol" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GirlBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(Control.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GirlBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="提示卡片Rect" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="#EDEDED" />
        </Style>
        <Style x:Key="提示卡片ListItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid MinHeight="66">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="1" />
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0" />
                            <Rectangle Grid.Row="1" Style="{StaticResource 提示卡片Rect}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="提示卡片ListBox" TargetType="{x:Type ListBox}">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ItemsPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource 提示卡片ListItem}" />
        </Style>

        <!--  功能按钮  -->
        <SolidColorBrush x:Key="按钮文本颜色">#ffffff</SolidColorBrush>
        <Style x:Key="按钮文本" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Foreground" Value="{StaticResource 按钮文本颜色}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Color x:Key="确定按钮颜色1">#76b4e9</Color>
        <Color x:Key="确定按钮颜色2">#67a7de</Color>
        <LinearGradientBrush x:Key="确定按钮颜色" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="{StaticResource 确定按钮颜色1}" />
            <GradientStop Offset="1" Color="{StaticResource 确定按钮颜色2}" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="确定按钮失效颜色">#a8a8a8</SolidColorBrush>
        <Style x:Key="确定按钮边框" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource 确定按钮颜色}" />
            <Setter Property="CornerRadius" Value="20" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色1}"
                                            To="{StaticResource 确定按钮颜色2}" />
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色2}"
                                            To="{StaticResource 确定按钮颜色1}" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色2}"
                                            To="{StaticResource 确定按钮颜色1}" />
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].Color">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色1}"
                                            To="{StaticResource 确定按钮颜色2}" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource 确定按钮失效颜色}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="确定按钮" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="228" />
            <Setter Property="Height" Value="44" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Style="{StaticResource 确定按钮边框}">
                            <TextBlock Margin="8"
                                       Style="{StaticResource 按钮文本}"
                                       Text="{Binding Content,
                                                      RelativeSource={RelativeSource AncestorType={x:Type Button},
                                                                                     Mode=FindAncestor}}" />
                            <!--  {TemplateBinding ContentControl.Content}  -->
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="提示卡片Content"
               BasedOn="{StaticResource 提示卡片Base}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#717171" />
            <Setter Property="TextAlignment" Value="Left" />
        </Style>
        <Style x:Key="修改按钮边框" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource 确定按钮颜色}" />
            <Setter Property="CornerRadius" Value="5" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色1}"
                                            To="{StaticResource 确定按钮颜色2}" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"
                                            From="{StaticResource 确定按钮颜色2}"
                                            To="{StaticResource 确定按钮颜色1}" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="修改按钮" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="79" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Style="{StaticResource 修改按钮边框}">
                            <TextBlock Style="{StaticResource 按钮文本}" Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </frameworkBase:ViewsBase.Resources>
    <Grid>
        <ContentControl Width="684"
                        Height="542"
                        Style="{DynamicResource 提示卡片}">
            <StackPanel Margin="0" Orientation="Vertical">
                <ListBox Style="{StaticResource 提示卡片ListBox}">
                    <UserControls:TitleLabel Height="60"
                                             Margin="0,20"
                                             ValueColumnWidth="2*">
                        <UserControls:TitleLabel.Title>
                            <TextBlock Style="{StaticResource 提示卡片Header}" Text="就诊人姓名：" />
                        </UserControls:TitleLabel.Title>
                        <UserControls:TitleLabel.Value>
                            <Border Width="300"
                                    HorizontalAlignment="Left"
                                    BorderBrush="#717171"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                <TextBox Width="300"
                                         Height="50"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Center"
                                         VerticalContentAlignment="Center"
                                         BorderThickness="0"
                                         FontFamily="微软雅黑"
                                         FontSize="23"
                                         IsReadOnly="True"
                                         MaxLines="1"
                                         Padding="4"
                                         Text="{Binding Name}">
                                    <TextBox.InputBindings>
                                        <MouseBinding Command="{Binding ModifyNameCommand}" MouseAction="LeftClick" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </Border>
                        </UserControls:TitleLabel.Value>
                    </UserControls:TitleLabel>
                    <UserControls:TitleLabel Height="60"
                                             Margin="0,20"
                                             ValueColumnWidth="2*">
                        <UserControls:TitleLabel.Title>
                            <TextBlock Style="{StaticResource 提示卡片Header}" Text="就诊人性别：" />
                        </UserControls:TitleLabel.Title>
                        <UserControls:TitleLabel.Value>
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <RadioButton IsChecked="{Binding IsBoy}" Style="{StaticResource RadioButtonBoy}" />
                                <RadioButton Margin="20,0"
                                             IsChecked="{Binding IsGirl}"
                                             Style="{StaticResource RadioButtonGirl}" />
                            </StackPanel>
                        </UserControls:TitleLabel.Value>
                    </UserControls:TitleLabel>
                    <Grid Height="108" Margin="0,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                                   Style="{StaticResource 提示卡片Header}"
                                   Text="出生日期：" />
                        <UserControls:DatePicker Grid.Column="1"
                                                 Height="108"
                                                 HorizontalAlignment="Left"
                                                 SelectedDate="{Binding DateTime}" />
                    </Grid>
                    <UserControls:TitleLabel Height="66"
                                             Margin="0,0,1,0"
                                             ValueColumnWidth="2*">
                        <UserControls:TitleLabel.Title>
                            <TextBlock Style="{StaticResource 提示卡片Header}" Text="联系电话：" />
                        </UserControls:TitleLabel.Title>
                        <UserControls:TitleLabel.Value>
                            <Grid>
                                <TextBlock Style="{StaticResource 提示卡片Content}" Text="{Binding Phone}" />

                                <UserControls:SimpleButton Margin="100,0"
                                                           HorizontalAlignment="Right"
                                                           VerticalAlignment="Center"
                                                           Command="{Binding UpdateCommand}"
                                                           Content="{Binding ButtonContent}"
                                                           Style="{StaticResource 修改按钮}"
                                                           TagString="{Binding ButtonContent}"
                                                           Visibility="{Binding CanUpdatePhone,
                                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>
                        </UserControls:TitleLabel.Value>
                    </UserControls:TitleLabel>

                </ListBox>
                <UserControls:SimpleButton Margin="228,18"
                                           Command="{Binding ConfirmCommand}"
                                           Content="确定"
                                           Style="{StaticResource 确定按钮}"
                                           TagString="确定" />
            </StackPanel>
        </ContentControl>

    </Grid>
</frameworkBase:ViewsBase>

